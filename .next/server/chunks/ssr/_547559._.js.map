{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/so/Desktop/projet/protfolio/my-app/src/app/page.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\n\n// Components\ninterface SectionProps {\n  title: string;\n  children: ReactNode;\n}\n\nconst Section: React.FC<SectionProps> = ({ title, children }) => (\n  <section className=\"my-8\">\n    <h2 className=\"text-2xl font-bold mb-4\">{title}</h2>\n    {children}\n  </section>\n);\n\ninterface ExperienceCardProps {\n  role: string;\n  company: string;\n  date: string;\n  description: string;\n  skills: string[];\n}\n\nconst ExperienceCard: React.FC<ExperienceCardProps> = ({ role, company, date, description, skills }) => (\n  <div className=\"bg-gray-100 p-4 rounded-md shadow mb-4\">\n    <h3 className=\"text-xl font-semibold\">{role}</h3>\n    <p className=\"text-sm text-gray-600\">{company} | {date}</p>\n    <p className=\"my-2\">{description}</p>\n    <div className=\"flex flex-wrap gap-2\">\n      {skills.map((skill, index) => (\n        <span key={index} className=\"bg-gray-300 px-2 py-1 rounded text-sm\">\n          {skill}\n        </span>\n      ))}\n    </div>\n  </div>\n);\n\ninterface ProjectCardProps {\n  title: string;\n  description: string;\n  tools: string[];\n}\n\nconst ProjectCard: React.FC<ProjectCardProps> = ({ title, description, tools }) => (\n  <div className=\"bg-black text-white p-4 rounded-md shadow mb-4\">\n    <h3 className=\"text-lg font-bold\">{title}</h3>\n    <p className=\"text-sm mb-2\">{description}</p>\n    <div className=\"flex flex-wrap gap-2\">\n      {tools.map((tool, index) => (\n        <span key={index} className=\"bg-gray-700 px-2 py-1 rounded text-sm\">\n          {tool}\n        </span>\n      ))}\n    </div>\n  </div>\n);\n\nconst Footer: React.FC = () => (\n  <footer className=\"text-center bg-black text-white py-4 mt-8\">\n    <p>Developed By Sereme Abdoulaye</p>\n  </footer>\n);\n\n// Main App\nconst Home: React.FC = () => {\n  const experiences = [\n    {\n      role: \"Chef d'équipe Front-End\",\n      company: \"Legafrik\",\n      date: \"Juillet 2023 - Present\",\n      description:\n        \"Coordination et développement des interfaces utilisateur de Legafrik.\",\n      skills: [\"JavaScript\", \"React.js\", \"TypeScript\", \"HubSpot\", \"Laravel\"],\n    },\n    {\n      role: \"Développeur front-end\",\n      company: \"Jool International\",\n      date: \"Août 2021 - Février 2023\",\n      description:\n        \"Création d'expériences numériques pour des clients tels que JOOL ID et FENOP.\",\n      skills: [\n        \"JavaScript\",\n        \"Vue.js\",\n        \"React.js\",\n        \"Strapi\",\n        \"Node.js\",\n        \"Angular\",\n      ],\n    },\n  ];\n\n  const projects = [\n    {\n      title: \"Datagreff\",\n      description:\n        \"Plateforme pour accéder et collecter des informations légales.\",\n      tools: [\"JS\", \"React\"],\n    },\n    {\n      title: \"Legafrik\",\n      description:\n        \"Plateforme permettant de créer des documents légaux en ligne.\",\n      tools: [\"JS\", \"React\"],\n    },\n  ];\n\n  return (\n    <div className=\"container mx-auto px-4\">\n      {/* About Section */}\n      <Section title=\"A propos\">\n        <p>\n          Je suis un développeur passionné par la création d&apos;interfaces\n          utilisateur accessibles et parfaites au pixel près.\n        </p>\n      </Section>\n\n      {/* Experiences Section */}\n      <Section title=\"Expériences\">\n        {experiences.map((exp, index) => (\n          <ExperienceCard key={index} {...exp} />\n        ))}\n      </Section>\n\n      {/* Projects Section */}\n      <Section title=\"Projets\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {projects.map((project, index) => (\n            <ProjectCard key={index} {...project} />\n          ))}\n        </div>\n      </Section>\n\n      {/* Footer */}\n      <Footer />\n    </div>\n  );\n};\n\nexport default Home;"],"names":[],"mappings":";;;;;AAQA,MAAM,UAAkC,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,iBAC1D,8OAAC;QAAQ,WAAU;;0BACjB,8OAAC;gBAAG,WAAU;0BAA2B;;;;;;YACxC;;;;;;;AAYL,MAAM,iBAAgD,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,iBACjG,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAyB;;;;;;0BACvC,8OAAC;gBAAE,WAAU;;oBAAyB;oBAAQ;oBAAI;;;;;;;0BAClD,8OAAC;gBAAE,WAAU;0BAAQ;;;;;;0BACrB,8OAAC;gBAAI,WAAU;0BACZ,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,8OAAC;wBAAiB,WAAU;kCACzB;uBADQ;;;;;;;;;;;;;;;;AAcnB,MAAM,cAA0C,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,iBAC5E,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAqB;;;;;;0BACnC,8OAAC;gBAAE,WAAU;0BAAgB;;;;;;0BAC7B,8OAAC;gBAAI,WAAU;0BACZ,MAAM,GAAG,CAAC,CAAC,MAAM,sBAChB,8OAAC;wBAAiB,WAAU;kCACzB;uBADQ;;;;;;;;;;;;;;;;AAQnB,MAAM,SAAmB,kBACvB,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;sBAAE;;;;;;;;;;;AAIP,WAAW;AACX,MAAM,OAAiB;IACrB,MAAM,cAAc;QAClB;YACE,MAAM;YACN,SAAS;YACT,MAAM;YACN,aACE;YACF,QAAQ;gBAAC;gBAAc;gBAAY;gBAAc;gBAAW;aAAU;QACxE;QACA;YACE,MAAM;YACN,SAAS;YACT,MAAM;YACN,aACE;YACF,QAAQ;gBACN;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;QACH;KACD;IAED,MAAM,WAAW;QACf;YACE,OAAO;YACP,aACE;YACF,OAAO;gBAAC;gBAAM;aAAQ;QACxB;QACA;YACE,OAAO;YACP,aACE;YACF,OAAO;gBAAC;gBAAM;aAAQ;QACxB;KACD;IAED,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAQ,OAAM;0BACb,cAAA,8OAAC;8BAAE;;;;;;;;;;;0BAOL,8OAAC;gBAAQ,OAAM;0BACZ,YAAY,GAAG,CAAC,CAAC,KAAK,sBACrB,8OAAC;wBAA4B,GAAG,GAAG;uBAAd;;;;;;;;;;0BAKzB,8OAAC;gBAAQ,OAAM;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACZ,SAAS,GAAG,CAAC,CAAC,SAAS,sBACtB,8OAAC;4BAAyB,GAAG,OAAO;2BAAlB;;;;;;;;;;;;;;;0BAMxB,8OAAC;;;;;;;;;;;AAGP;uCAEe"}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file:///Users/so/Desktop/projet/protfolio/my-app/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;iBACVC,MAAMZ,UAAUa,QAAQ;sBACxBC,IAAAA,CAAM,CAAA;gBAAA,QAAA;oBAAA,IAAA;oBAAA;iBAAA;;eACNC,UAAU;;SACV,2CAA2C;cAC3CC,IAAAA;YAAAA,GAAY,GAAA;iBACZC,MAAAA,IAAU,IAAA;wBAAA;4BACVC,KAAAA,CAAAA,GAAAA,2KAAAA,CAAAA,KAAU,EAAE,eAAA,EAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACd,OAAA,GAAA,iTAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACAC,MAAU,CAAA,YAAA,CAAA;;qBACRC,YAAYnB;aACd;QACF,CAAE;QAAA,UAAA;YAAA,IAAA;YAAA;SAAA","ignoreList":[0]}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}